{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\todo-list\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoItem from '..//TodoItem';\nimport AddTodo from '../AddTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = text => {\n    setTodos([...todos, {\n      id: Date.now(),\n      text,\n      completed: false\n    }]);\n  };\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoItem","AddTodo","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","addTodo","text","id","Date","now","completed","toggleComplete","map","todo","deleteTodo","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Home/todo-list/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TodoItem from '..//TodoItem';\r\nimport AddTodo from '../AddTodo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (text) => {\r\n    setTodos([...todos, { id: Date.now(), text, completed: false }]);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddTodo addTodo={addTodo} />\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          toggleComplete={toggleComplete}\r\n          deleteTodo={deleteTodo}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEI,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEH,IAAI;MAAEI,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAMC,cAAc,GAAIJ,EAAE,IAAK;IAC7BH,QAAQ,CACND,KAAK,CAACS,GAAG,CAAEC,IAAI,IACbA,IAAI,CAACN,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGM,IAAI;MAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;IAAU,CAAC,GAAGG,IAC7D,CACF,CAAC;EACH,CAAC;EAED,MAAMC,UAAU,GAAIP,EAAE,IAAK;IACzBH,QAAQ,CAACD,KAAK,CAACY,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACF,OAAO;MAACO,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC5BjB,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACdb,OAAA,CAACH,QAAQ;MAEPgB,IAAI,EAAEA,IAAK;MACXF,cAAc,EAAEA,cAAe;MAC/BG,UAAU,EAAEA;IAAW,GAHlBD,IAAI,CAACN,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAhCQD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}